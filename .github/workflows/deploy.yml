name: Deploy to Ubuntu Server    #CICD 작업명

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거(이벤트설정)

jobs: # jops는 깃헙에서 제공하는 새로운 가상머신, 이벤트가 일어나면 jobs 항목 순서대로 진행됨
  build:
    runs-on: ubuntu-latest #깨끗한 리눅스서버 이미지에서 실행

    steps: # 실행단계별에 대한 설명
    
    # 1단계 - 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v2   # (깃헙서버로부터 코드를 가져와서 복사한다는 설정)

    # JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build with Gradle
      run: ./gradlew build  # (배포소스가 복사된 폴더에서 바로 실행)

    # 보안 통신 설정
    - name: Set SSH key permissions
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa   # 나만 읽고 쓸수 있게 권한설정

    # 키값에 대한 설정
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

    - name: Add known_hosts
      run: |
        # 서버주소
        echo "3.38.246.161 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOv6VrKy37/jwgpn2LLby5EEg34Af2pSgBQaFoRGIPb7" >> ~/.ssh/known_hosts

    - name: 기존프로세스 종료 
      run: |
        #셸 스크립트를 이용해서 수정전 가동중인 서버를 제거하고, 수정된 파일로 실행시키는 명령  || 처음 실행할때는 그냥 그대로
        kill -9 $(ps -ef | grep devops | grep -v grep | head -n 1 | awk '{print $2}') || true

    - name: Deploy to Server   # app.jar 복사
      run: scp -i ~/.ssh/id_rsa -r build/libs/*.jar ubuntu@3.38.246.161:~/app/

    # 배포파일 실행
    - name: Run SSH commands
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@3.38.246.161 << 'EOF'

          #해당 jar 파일을 실행
          nohup java -jar ~/app/devops_step0-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
        EOF
